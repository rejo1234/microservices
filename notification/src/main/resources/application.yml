server:
  port: 8083

spring:
  application:
    name: notification
  datasource:
    password: password
    url: jdbc:postgresql://localhost:8082/notification
    username: admin
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
  rabbitmq:
    addresses: localhost:5672
    username: guest
    password: guest
  profiles:
    active: rabbit
    kafka:
      bootstrap-servers: localhost:9092
      consumer:
        group-id: my-app-group
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
        auto-offset-reset: earliest
        enable-auto-commit: false
        properties:
          spring.json.trusted.packages: "*"
          spring.json.use.type.headers: true
      listener:
        ack-mode: manual_immediate
      admin:
        properties:
          bootstrap.servers: localhost:9092
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true
    enabled: true

rabbitmq:
  exchanges:
    internal: internal.exchange
  queues:
    notification: notification.queue
  routing-keys:
    internal-notification: internal.notification.routing-key

management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans

logging:
  level:
    brave: DEBUG
    zipkin: DEBUG
    io.micrometer.tracing: DEBUG
